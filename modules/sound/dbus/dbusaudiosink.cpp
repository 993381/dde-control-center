/**
 * Copyright (C) 2015 Deepin Technology Co., Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 **/

/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DBusAudioSink -p dbusaudiosink com.deepin.daemon.Audio.Sink.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "dbusaudiosink.h"

/*
 * Implementation of interface class DBusAudioSink
 */

QDBusArgument &operator<<(QDBusArgument &argument, const SinkPortStruct &port)
{
    argument.beginStructure();
    argument << port.id << port.name << port.index;
    argument.endStructure();
    return argument;
}

const QDBusArgument &operator>>(const QDBusArgument &argument, SinkPortStruct &port)
{
    argument.beginStructure();
    argument >> port.id >> port.name >> port.index;
    argument.endStructure();
    return argument;
}

DBusAudioSink::DBusAudioSink(const QString &path, QObject *parent)
    : QDBusAbstractInterface(staticServerPath(), path, staticInterfaceName(), QDBusConnection::sessionBus(), parent)
{
    qDBusRegisterMetaType<SinkPortList>();
    qDBusRegisterMetaType<SinkPortStruct>();
    QDBusConnection::sessionBus().connect(this->service(), this->path(), "org.freedesktop.DBus.Properties",  "PropertiesChanged","sa{sv}as", this, SLOT(__propertyChanged__(QDBusMessage)));
}

DBusAudioSink::~DBusAudioSink()
{
    QDBusConnection::sessionBus().disconnect(service(), path(), "org.freedesktop.DBus.Properties",  "PropertiesChanged",  "sa{sv}as", this, SLOT(propertyChanged(QDBusMessage)));
}

