/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p dbusdefaultapps -c DefaultApps defaultApps
 *
 * qdbusxml2cpp is Copyright (C) 2015 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DBUSDEFAULTAPPS_H_1438767636
#define DBUSDEFAULTAPPS_H_1438767636

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include <QtDBus/QDBusArgument>

class AppType
{
public:
    static void registerMetaType();

    friend QDBusArgument &operator<<(QDBusArgument &argument, const AppType& message);
    friend const QDBusArgument &operator>>(const QDBusArgument &argument, AppType &message);
    friend QDebug &operator<<(QDebug &argument, const AppType& message);

public:
    QString s1;
    QString s2;
    QString s3;
};

class AppList
{
public:
    static void registerMetaType();

    friend QDBusArgument &operator<<(QDBusArgument &argument, const AppList& message);
    friend const QDBusArgument &operator>>(const QDBusArgument &argument, AppList &message);

public:
    QList<AppType> list;
};

/*
 * Proxy class for interface com.deepin.daemon.DefaultApps
 */
class DefaultDBusApps: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.daemon.DefaultApps"; }

public:
    DefaultDBusApps(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DefaultDBusApps();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<AppList> AppsListViaType(const QString &in0)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0);
        return asyncCallWithArgumentList(QStringLiteral("AppsListViaType"), argumentList);
    }

    inline QDBusPendingReply<AppType> DefaultAppViaType(const QString &in0)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0);
        return asyncCallWithArgumentList(QStringLiteral("DefaultAppViaType"), argumentList);
    }

    inline QDBusPendingReply<bool> Reset()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("Reset"), argumentList);
    }

    inline QDBusPendingReply<bool> SetDefaultAppViaType(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0) << QVariant::fromValue(in1);
        return asyncCallWithArgumentList(QStringLiteral("SetDefaultAppViaType"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void DefaultAppChanged();
};

namespace com {
  namespace deepin {
    namespace daemon {
      typedef ::DefaultDBusApps DefaultApps;
    }
  }
}

Q_DECLARE_METATYPE(AppType)
Q_DECLARE_METATYPE(AppList)
#endif
