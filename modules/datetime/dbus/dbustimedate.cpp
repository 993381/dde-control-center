/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DBusTimedate -p dbustimedate com.deepin.daemon.Timedate.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "dbustimedate.h"

/*
 * Implementation of interface class DBusTimedate
 */

DBusTimedate::DBusTimedate(QObject *parent)
    : QDBusAbstractInterface("com.deepin.daemon.Timedate", "/com/deepin/daemon/Timedate", staticInterfaceName(), QDBusConnection::sessionBus(), parent)
{
    QDBusConnection::sessionBus().connect(this->service(), this->path(), "org.freedesktop.DBus.Properties",  "PropertiesChanged", "sa{sv}as", this, SLOT(__propertyChanged__(QDBusMessage)));
    ZoneInfo::registerMetaType();
}

DBusTimedate::~DBusTimedate()
{
    QDBusConnection::sessionBus().disconnect(service(), path(), "org.freedesktop.DBus.Properties",  "PropertiesChanged",  "sa{sv}as", this, SLOT(propertyChanged(QDBusMessage)));
}

ZoneInfo::ZoneInfo()
{

}

void ZoneInfo::registerMetaType()
{
    qRegisterMetaType<ZoneInfo>();
    qDBusRegisterMetaType<ZoneInfo>();
}

QDebug operator<< (QDebug argument, const ZoneInfo & info)
{
    argument << info.s1 << info.s2 << info.i1;
    argument << info.i2 << info.i3 << info.i4;

    return argument;
}

QDBusArgument & operator<< (QDBusArgument & argument, const ZoneInfo & info)
{
    argument.beginStructure();
    argument << info.s1 << info.s2 << info.i1;
    argument.beginStructure();
    argument << info.i2 << info.i3 << info.i4;
    argument.endStructure();
    argument.endStructure();

    return argument;
}

const QDBusArgument & operator>> (const QDBusArgument & argument, ZoneInfo & info)
{
    argument.beginStructure();
    argument >> info.s1 >> info.s2 >> info.i1;
    argument.beginStructure();
    argument >> info.i2 >> info.i3 >> info.i4;
    argument.endStructure();
    argument.endStructure();

    return argument;
}
