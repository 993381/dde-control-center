/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp dde-center -a dbuscontrolcenter -c DBusControlCenter -l Frame
 *
 * qdbusxml2cpp is Copyright (C) 2015 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbuscontrolcenter.h"

#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DBusControlCenter
 */

DBusControlCenter::DBusControlCenter(Frame *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DBusControlCenter::~DBusControlCenter()
{
    // destructor
}

Frame *DBusControlCenter::parent() const
{
    return static_cast<Frame *>(QObject::parent());
}

bool DBusControlCenter::showInRight() const
{
    // get the value of property ShowInRight
    return qvariant_cast< bool >(!parent()->isHideInLeft());
}

int DBusControlCenter::x() const
{
    // get the value of property X
    return qvariant_cast< int >(parent()->pos().x());
}

void DBusControlCenter::Hide()
{
    // handle method call com.deepin.dde.ControlCenter.Hide
    parent()->hide();
}

void DBusControlCenter::HideImmediately()
{
    // handle method call com.deepin.dde.ControlCenter.HideImmediately
    parent()->hide(true);
}

void DBusControlCenter::Show()
{
    // handle method call com.deepin.dde.ControlCenter.Show
    parent()->show();
}

void DBusControlCenter::ShowImmediately()
{
    // handle method call com.deepin.dde.ControlCenter.ShowImmediately
    parent()->show(true);
}

void DBusControlCenter::ShowModule(const QString &name)
{
    // handle method call com.deepin.dde.ControlCenter.ShowModule
    //parent()->ShowModule(name);
    parent()->selectModule(name);
}

void DBusControlCenter::Toggle()
{
    // handle method call com.deepin.dde.ControlCenter.Toggle
    //parent()->Toggle();
    if (parent()->isVisible())
        parent()->hide();
    else
        parent()->show();
}

void DBusControlCenter::ToggleInLeft()
{
    // handle method call com.deepin.dde.ControlCenter.ToggleInLeft
    //parent()->ToggleInLeft();
}

bool DBusControlCenter::isNetworkCanShowPassword()
{
    // handle method call com.deepin.dde.ControlCenter.isNetworkCanShowPassword
    //return parent()->isNetworkCanShowPassword();

    return true; // for remove gcc warning.
}

